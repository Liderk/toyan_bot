services:
  postgres:
    image: ghcr.io/liderk/postgres:latest
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready --quiet -U ${POSTGRES_USER} -d postgres" ]
      interval: 1s
      retries: 10
      start_period: 5s
    volumes:
      - pg_data:/var/lib/postgresql/data
      - logs:/var/log/app/postgres
    env_file:
      - .env
  backend:
      image: ghcr.io/liderk/backend:latest
      restart: always
      healthcheck:
        test: [ "CMD-SHELL", "-c", "curl -o /dev/null http://localhost:5000/admin/login/?next=/admin/" ]
        interval: 1s
        retries: 10
        start_period: 10s
      volumes:
        - static:/var/www/static
        - media:/var/www/media
      depends_on:
        postgres:
          condition: service_healthy
      env_file:
          - .env
  bot:
    image: ghcr.io/liderk/bot:latest
    hostname: bot
    volumes:
      - media:/var/www/media
    env_file:
      - .env
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
  portainer:
    image: ghcr.io/liderk/portainer:latest
    build:
      context: .
      dockerfile: dockerization/portainer/Dockerfile
    restart: always
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  nginx:
    image: ghcr.io/liderk/nginx:latest
    volumes:
      - logs:/code/logs/
      - static:/var/www/static
      - media:/var/www/media
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      backend:
        condition: service_healthy
volumes:
  pg_data:
    driver: local
    driver_opts:
        type: none
        o: 'bind'
        device: /srv/volumes/db

  media:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: /srv/volumes/media

  static:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: /srv/volumes/static

  logs:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: /srv/volumes/logs

  portainer_data:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: /srv/volumes/portainer_data

  nginx_data:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: /srv/volumes/nginx_data
