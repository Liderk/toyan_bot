pid /var/run/nginx.pid;

worker_processes auto;
worker_rlimit_nofile 16384;

events {
    worker_connections  4096;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    client_max_body_size 30M;

    server_tokens off;

    gzip on;
    gzip_min_length  4096;
    gzip_buffers     4 8k;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_types      text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    limit_req_zone $binary_remote_addr zone=client_limit:20m rate=350r/s;
    limit_req_status 429;
    limit_conn_status 429;

    server {
        listen 80 backlog=4096;
        listen [::]:80 backlog=4096;

        location / {
            access_log off;

            limit_req zone=client_limit burst=10 nodelay;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_redirect off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;

            proxy_pass http://backend:5000;
        }

        location /static/ {
        alias /var/www/static/;
        expires 30d;
        access_log off;
        }

        location /media/ {
            alias /var/www/media/;
            expires 30d;
            access_log off;
        }
#         location /portainer/ {
#         rewrite ^/portainer(/.*)$ /$1 break;
#         proxy_pass http://portainer:9000/;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         }
#
#         location /portainer/api {
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_pass http://portainer:9000/api;
#         proxy_set_header Connection 'upgrade';
#         proxy_http_version 1.1;
#         }
    }

#    server {
#        add_header X-Content-Type-Options nosniff;
#        listen 443 ssl;

#        ssl_certificate conf.d/ssl/cert.pem;
#        ssl_certificate_key conf.d/ssl/key.pem;
#        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#        sendfile on;
#        charset utf-8;
#    }
}
