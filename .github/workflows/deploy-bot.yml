name: Deploy in Docker
on:
#  push:
#        branches: [ "master" ]
#    tags:
#      - '*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        app: [ "backend", "bot", "nginx", "portainer", "postgres" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06
        with:
          cosign-release: 'v2.1.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.REGISTRY }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}_${{ matrix.app }}
          tags: |
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push Docker image for ${{ matrix.app }}
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          file: ./dockerization/${{ matrix.app }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync docker-compose file
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ secrets.VPS_TOYAN_BOT }}" >> secret_key
          chmod 600 secret_key
          rsync -e "ssh -i $(pwd)/secret_key -o StrictHostKeyChecking=no -p 2707" ./docker-compose.yml app@212.109.218.91:~/toyan_bot/docker-compose.yml

      - name: Rerun app
        if: github.event_name != 'pull_request'
        run: |
          ssh -i $(pwd)/secret_key -o StrictHostKeyChecking=no app@212.109.218.91 "
            docker login ghcr.io --username=${{ github.actor }} --password=${{ secrets.GITHUB_TOKEN }};
            cd ~/toyan_bot;
            docker compose pull;
            docker compose up -d;
          "