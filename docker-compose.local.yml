services:
  backend:
      container_name: backend
      build:
        context: .
        dockerfile: dockerization/backend/Dockerfile
      hostname: backend
      volumes:
        - static:/var/www/static
        - media:/var/www/media
      expose:
        - "5000"
      env_file:
          - django_app/.env
      restart: always
      command: >
        bash -c "dockerization/scripts/wait_postgres.sh && 
        dockerization/backend/scripts/run.sh"

  bot:
    container_name: bot
    build:
      context: .
      dockerfile: dockerization/bot/Dockerfile
    hostname: bot
    volumes:
      - media:/var/www/media
    env_file:
      - telegram_app/.env
    restart: always
    command: >
      bash -c "dockerization/scripts/wait_postgres.sh && 
      dockerization/bot/scripts/run.sh"


  nginx:
    container_name: nginx
    hostname: nginx
    build:
      context: .
      dockerfile: dockerization/nginx/Dockerfile
    volumes:
      - ./dockerization/nginx/ssl:/etc/nginx/conf.d/ssl
      - ./dockerization/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - logs:/code/logs/
      - static:/var/www/static
      - media:/var/www/media
    ports:
      - 80:80
      - 443:443
    restart: always
    links:
      - backend

volumes:

  media:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: /media/projects/volumes/toyan_bot/media

  static:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: /media/projects/volumes/toyan_bot/static

  logs:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: /media/projects/volumes/toyan_bot/logs

  nginx_data:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: /media/projects/volumes/toyan_bot/nginx_data
